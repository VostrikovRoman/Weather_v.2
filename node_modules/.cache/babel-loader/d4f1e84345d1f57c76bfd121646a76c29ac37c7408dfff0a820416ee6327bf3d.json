{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../src/assets/sun.png';\nconst _hoisted_1 = {\n  class: \"background\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"Погода в городе\", -1 /* HOISTED */)), _createCommentVNode(\"<p ><br> Загрузка...</p> v-if=\\\"weather_data\\\"\"), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"weather\"\n  }, [_createElementVNode(\"div\", {\n    class: \"temp_box\"\n  }, [_createElementVNode(\"img\", {\n    class: \"image_weather\",\n    src: _imports_0\n  }), _createElementVNode(\"p\", {\n    class: \"temp\"\n  }, \"60°C\"), _createCommentVNode(\"{{ weather_data.main.temp }}\")]), _createCommentVNode(\"<h2>Ощущается как: </h2> {{ weather_data.main.feels_like }}\\n      <h2>Максимальная температура: </h2> {{ weather_data.main.temp_max }}\\n      <h2>Минимальная температура: </h2> {{ weather_data.main.temp_min }}\\n      <h2>Давление: </h2> {{ weather_data.main.pressure }}\\n      <h2>Влажность: </h2> {{ weather_data.main.humidity }}\\n      <h2>Уровень моря: </h2> {{ weather_data.main.sea_level }}\\n      <h2>Уровень земли: </h2> {{ weather_data.main.grnd_level }}\")], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","src"],"sources":["C:\\Users\\rmnvs\\Documents\\Институт\\3 курс\\Разработка клиентской части веб-приложений\\API\\my_api\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"background\">\n    <h1 class=\"title\">Погода в городе</h1>\n    <!--<p ><br> Загрузка...</p> v-if=\"weather_data\"-->\n    <div class=\"weather\" >\n      <div class=\"temp_box\">\n        <img class=\"image_weather\" src=\"../src/assets/sun.png\">\n        <p class=\"temp\">60&deg;C</p> <!--{{ weather_data.main.temp }}-->\n      </div>\n      \n      <!--<h2>Ощущается как: </h2> {{ weather_data.main.feels_like }}\n      <h2>Максимальная температура: </h2> {{ weather_data.main.temp_max }}\n      <h2>Минимальная температура: </h2> {{ weather_data.main.temp_min }}\n      <h2>Давление: </h2> {{ weather_data.main.pressure }}\n      <h2>Влажность: </h2> {{ weather_data.main.humidity }}\n      <h2>Уровень моря: </h2> {{ weather_data.main.sea_level }}\n      <h2>Уровень земли: </h2> {{ weather_data.main.grnd_level }}-->\n    </div>\n  </div>\n  \n</template>\n\n<script>\n\n\nexport default {\n  name: 'App',\n  data(){\n    return{\n      weather_data:null\n    }\n  },\n  mounted(){\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=57.9194&lon=59.965&appid=a06d5389c363dc0143a775466aef9cb3&units=metric&lang=ru\")\n    .then(resp=>resp.json())\n    .then(json=>{\n      this.weather_data=json;\n    });\n  },\n  components: {\n    \n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  color: #d8d8d8;\n}\n.weather{\n  border: solid 2px #2c3e50;\n  border-radius: 10px;\n  width: auto;\n  padding-left: 25px;\n}\n.background{\n  background: #2c3e50;\n  border-radius: 10px;\n  margin:40px 20px 20px 20px;\n  padding-top: 10px;\n}\n.title{\n  margin-left: 10px;\n}\n.temp{\n  font-size: 80px;\n  display: inline-block;\n}\n.image_weather{\n  width: 100px;\n  display: inline-block;\n}\n.temp_box{\n  pa\n}\n</style>\n"],"mappings":";OAMmCA,UAA2B;;EALvDC,KAAK,EAAC;AAAY;;uBAAvBC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJC,mBAAA,CAAsC;IAAlCH,KAAK,EAAC;EAAO,GAAC,iBAAe,sBACjCI,mBAAA,kDAAmD,E,0BACnDD,mBAAA,CAaM;IAbDH,KAAK,EAAC;EAAS,IAClBG,mBAAA,CAGM;IAHDH,KAAK,EAAC;EAAU,IACnBG,mBAAA,CAAuD;IAAlDH,KAAK,EAAC,eAAe;IAACK,GAA2B,EAA3BN;MAC3BI,mBAAA,CAA4B;IAAzBH,KAAK,EAAC;EAAM,GAAC,MAAQ,GAAKI,mBAAA,gCAAmC,C,GAGlEA,mBAAA,mdAM8D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}