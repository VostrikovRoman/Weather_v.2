{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"background\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"load\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.city_data ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"br\", null, null, -1 /* HOISTED */), _createTextVNode(\" Загрузка...\")]))) : (_openBlock(), _createElementBlock(\"h1\", _hoisted_3, \"Погода в городе: \" + _toDisplayString($data.city_data.response.GeoObjectCollection.metaDataProperty.GeocoderResponseMetaData.request), 1 /* TEXT */)), _createCommentVNode(\" <p v-if=\\\"!weather_data\\\" class=\\\"load\\\"><br> Загрузка...</p> \\n    \\n    <div class=\\\"weather\\\" v-else>\\n      <div class=\\\"temp_box\\\">\\n        <img class=\\\"image_weather\\\" src=\\\"../src/assets/sun.png\\\">\\n        <p class=\\\"temp\\\">{{ weather_data.main.temp }} &deg;C</p> \\n      </div>\\n      <div class=\\\"description\\\">\\n        <p class=\\\"title title_p\\\">{{ weather_data.weather[0].description.replace(weather_data.weather[0].description[0], weather_data.weather[0].description[0].toUpperCase()) }}</p>\\n        <p class=\\\"title title_p\\\">Ощущается как {{ weather_data.main.feels_like }} &deg;C</p>\\n      </div>\\n      <div class=\\\"others_2\\\">\\n        <div>\\n          <img class=\\\"title_o_2 image_others\\\" src=\\\"../src/assets/barometer.png\\\">\\n          <p class=\\\"title title_o_2\\\">{{ weather_data.main.pressure }} мм рт.ст.</p>\\n        </div>\\n        <div>\\n          <img class=\\\"title_o_2 image_others\\\" src=\\\"../src/assets/humidity.png\\\">\\n          <p class=\\\"title title_o_2\\\">{{ weather_data.main.humidity }} %</p>\\n        </div>\\n      </div>\\n      <div class=\\\"others\\\">\\n        <p class=\\\"title title_o\\\">MIN температура: {{ weather_data.main.temp_min }}</p>\\n        <p class=\\\"title title_o\\\">MAX температура: {{ weather_data.main.temp_max }}</p>\\n        <p class=\\\"title title_o\\\">Уровень моря: {{ weather_data.main.sea_level }}</p>\\n        <p class=\\\"title title_o\\\">Уровень земли: {{ weather_data.main.grnd_level }}</p>\\n      </div>\\n      \\n    </div> \")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","city_data","_hoisted_2","_cache","_createElementVNode","_createTextVNode","_hoisted_3","_toDisplayString","response","GeoObjectCollection","metaDataProperty","GeocoderResponseMetaData","request","_createCommentVNode"],"sources":["C:\\Users\\rmnvs\\Documents\\Институт\\3 курс\\Разработка клиентской части веб-приложений\\API\\my_api\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"background\">\n    <p v-if=\"!city_data\" class=\"load\"><br> Загрузка...</p> \n    <h1 v-else class=\"title\">Погода в городе: {{ city_data.response.GeoObjectCollection.metaDataProperty.GeocoderResponseMetaData.request }}</h1>\n    <!-- <p v-if=\"!weather_data\" class=\"load\"><br> Загрузка...</p> \n    \n    <div class=\"weather\" v-else>\n      <div class=\"temp_box\">\n        <img class=\"image_weather\" src=\"../src/assets/sun.png\">\n        <p class=\"temp\">{{ weather_data.main.temp }} &deg;C</p> \n      </div>\n      <div class=\"description\">\n        <p class=\"title title_p\">{{ weather_data.weather[0].description.replace(weather_data.weather[0].description[0], weather_data.weather[0].description[0].toUpperCase()) }}</p>\n        <p class=\"title title_p\">Ощущается как {{ weather_data.main.feels_like }} &deg;C</p>\n      </div>\n      <div class=\"others_2\">\n        <div>\n          <img class=\"title_o_2 image_others\" src=\"../src/assets/barometer.png\">\n          <p class=\"title title_o_2\">{{ weather_data.main.pressure }} мм рт.ст.</p>\n        </div>\n        <div>\n          <img class=\"title_o_2 image_others\" src=\"../src/assets/humidity.png\">\n          <p class=\"title title_o_2\">{{ weather_data.main.humidity }} %</p>\n        </div>\n      </div>\n      <div class=\"others\">\n        <p class=\"title title_o\">MIN температура: {{ weather_data.main.temp_min }}</p>\n        <p class=\"title title_o\">MAX температура: {{ weather_data.main.temp_max }}</p>\n        <p class=\"title title_o\">Уровень моря: {{ weather_data.main.sea_level }}</p>\n        <p class=\"title title_o\">Уровень земли: {{ weather_data.main.grnd_level }}</p>\n      </div>\n      \n    </div> -->\n  </div>\n  \n</template>\n\n<script>\n// import { jsx } from 'vue/jsx-runtime';\n// let city = \"Москва\";\n\n\nexport default {\n  name: 'App',\n  data(){\n    return{\n      weather_data:null,\n      city_data:null\n    }\n  },\n  mounted(){\n    fetch(\"https://geocode-maps.yandex.ru/1.x/?apikey=b9c5003e-d838-447d-87c3-3f021e76b867&geocode=Москва&format=json\")\n    .then(resp=>resp.json())\n    .then(json=>{\n      this.city_data=json;\n    });\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=57.9194&lon=59.965&appid=a06d5389c363dc0143a775466aef9cb3&units=metric&lang=ru\")\n    .then(resp=>resp.json())\n    .then(json=>{\n      this.weather_data=json;\n    });\n  },\n  components: {\n    \n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  color: #d8d8d8;\n}\n.weather{\n  padding-left: 25px;\n}\n.background{\n  background: linear-gradient(270deg, #3a50ab, #0b1529);\n  border-radius: 10px;\n  margin:40px 20px 20px 20px;\n  padding-top: 10px;\n  box-shadow: black 0px 0px 10px 0px;\n}\n.title{\n  margin-left: 30px;\n  font-size: 35px;\n}\n.temp{\n  font-size: 80px;\n  display: inline-block;\n}\n.image_weather{\n  width: 70px;\n  display: inline-block;\n  margin-right: 25px;\n}\n.temp_box{\n  width: 25%;\n  display: inline-block;\n}\n.description{\n  display: inline-block;\n}\n.title_p{\n  margin-top: -20px;\n}\n.title_o{\n  margin-top: -20px;\n  display: inline-block;\n  margin-right: 100px;\n}\n.title_o_2{\n  display: inline-block;\n  font-size: 40px;\n}\n.others_2{\n  display: inline-block;\n  margin-left: 355px;\n}\n.image_others{\n  width: 55px;\n}\n.load{\n  font-size: 25px;\n  margin: 30px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EADzBC,GAAA;EAEyBD,KAAK,EAAC;;;EAF/BC,GAAA;EAGeD,KAAK,EAAC;;;uBAFnBE,mBAAA,CAgCM,OAhCNC,UAgCM,G,CA/BMC,KAAA,CAAAC,SAAS,I,cAAnBH,mBAAA,CAAsD,KAAtDI,UAAsD,EAAAC,MAAA,QAAAA,MAAA,OAApBC,mBAAA,CAAI,qCAF1CC,gBAAA,CAE0C,cAAY,E,qBAClDP,mBAAA,CAA6I,MAA7IQ,UAA6I,EAApH,mBAAiB,GAAAC,gBAAA,CAAGP,KAAA,CAAAC,SAAS,CAACO,QAAQ,CAACC,mBAAmB,CAACC,gBAAgB,CAACC,wBAAwB,CAACC,OAAO,mBACrIC,mBAAA,i9CA4BU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}